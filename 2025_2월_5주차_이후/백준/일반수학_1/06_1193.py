# 문제
# 무한히 큰 배열에 다음과 같이 분수들이 적혀있다.
# 1/1 1/2 1/3 1/4 1/5 …
# 2/1 2/2 2/3 2/4 …	  …
# 3/1 3/2 3/3 …   …	  …
# 4/1 4/2 …	  …	  …	  …
# 5/1 …	  …	  …	  …   …
# …	  …	  …	  …   …	  …
# 이와 같이 나열된 분수들을 1/1 → 1/2 → 2/1 → 3/1 → 2/2 → … 과 같은 지그재그 순서로 차례대로 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.
# X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 X(1 ≤ X ≤ 10,000,000)가 주어진다.

# 출력
# 첫째 줄에 분수를 출력한다.


'''풀이 과정
대각선 시작 분수/끝 분수 를 알아내자
n 번째 그룹 시작 번호 1 + (n  - 1) // 2
n 번째 그룹 끝 번호 n * (n + 1) // 2

임의의 수 X번째에 듵어간 분수 파악하기
X <= n * (n + 1) // 2 를 만족하는 최소 n을 찾는다.

해당 그룹의 시작 번호 1 + (n - 1) * n // 2
X가 이 시작 번호에서 몇 번째인지 구하면 됨
위치 = X - 시작 번호 + 1

홀수 번째 그룹이면 분자 = 큰 수, 분모 = 작은 수
짝수 번째 그룹이면 분자 = 작은 수, 분모 = 큰수



X가 속한 n부터 찾아보자
n * (n + 1) // 2 >= X

그룹 시작 번호 계산
S = 1 + (n - 1) * n // 2
or
S = n * (n - 1) / 2 + 1

X가 그룹에서 몇 번째인지 계산
pos = X - S + 1

홀수 그룹이면
분자 = n - pos + 1
분모 = pos

짝수 그룹이면
분자 = pos
분모 = n - pos + 1
'''

X = int(input())
n = 1            # n 번째 그룹

# X가 포함된 층 찾기
while X > n * (n + 1) // 2:
    n += 1

# 해당 층의 시작 번호 계산
S = (n - 1) * n // 2 + 1        # 1 부터 시작했으니 + 1 해줌 이거도 다시 질문 필요
pos = X - S + 1                 # 그룹 내 위치

# 홀수 그룹 (위에서 아래)
if n % 2 == 1:
    print(f"{n - pos + 1}/{pos}")    # 왜 n - pos + 1 일까?

# 짝수 그룹 (아래에서 위)
else:
    print(f"{pos}/{n - pos + 1}")
