'''
아래 내용 보기 전 배운거 정리
1. 현재 이 파일에서 import area를 했을 때 area 내 불필요한 코드들을 불러오지 않는 방법이다.
2. 던더 네임 이라는 특수 변수를 사용하자. "__name__" 을 사용해서 불필요한 코드를 조건문으로 거를 수 있다.
3. 던더 네임의 규칙은 만약 실행 파일에서 던더 네임을 확인하면 파이썬에서 __main__ 이란 이름을 붙여준다.
4. import해온 파일 안에도 __name__을 출력하는 코드가 있다고 가정한다면 불러온 모듈의 던더 네임은 해당 파일의 이름이 된다.
5. 이걸 활용한다면, 모듈 내 불필요한 코드들을 if __name__ == '__main__' 이란 조건문 안에 넣어주면
6. 모듈을 직접 실행할 때 빼고는 모듈로 사용할 땐 사용되지 않는다.
7. 위 방법은은 모듈이 정상 작동되는지 확인할 때 사용할 수 있다.
'''




print(f'현재 파일 이름: {__name__}')

import mymath.shapes.area

print('현재 파일 실행됨')

# 위 코드를 실행시키면 실행 순서를 파악할 수 있다. 

# 실행 결과
# 현재 파일 이름: __main__   # 현재 파일을 먼저 실행하고        # 현재 실행하는 파일이니 __main__이 된다.
# area 모듈 이름: area       # area 파일에 있는 코드를 실행하고 # area 파일은 임포트되니까 area 이름으로 나온다.
# 현재 파일 실행됨           # 다시 현재 파일을 실행한다.



# 실행 파일에서 모듈에 있는 코드가 출력되는 문제를 해결하기 위해서는
# __name__이라는 특수 변수를 사용하면 된다.
# (던더 네임) 이라고 불린다.
# name은 모듈의 이름을 저장해놓은 변수이다.
# name의 값은 파이썬에서 알아서 정해줌

# 파이썬 파일을 직접 실행하면 그 파일의 name은 __main__
# import해서 사용한다면 __그파일의이름__ 이된다.

