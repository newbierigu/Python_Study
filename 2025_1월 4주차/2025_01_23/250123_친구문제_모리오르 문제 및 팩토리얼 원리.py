
###########################################################################
# 문제 1 : 모리오르 인빅투스 옵션 7 개 중 원하는 옵션 2개를 뽑을 때 사용되는 Exile 수

# 모리오르 인빅투스 : 개당 10 Exile
# 모리오르 인빅투스 3개 제련 시 새로운 모리오르 1개 생성성
# 모리오르 인빅투스 총 능력치 가지 수 = 7 가지
# 모리오르 인빅투스 경우의 수 = 모리오르에 붙을 수 있는 총 옵션 개수가 2개 니까 총 7개에서 6을 곱함.(3개면 7 * 6 * 5) 7 * 6
# 모리오르 인빅투스 경우의 수 내 중복 제거 / 2
# 모리오르 인빅투스에 붙길 원하는 옵션 가지 수 (모든 능력치/모든 저항) = 1개
'''
op = int(input('옵션 개수 : ')) # or 위 문제에서 정해준 7 그대로 'op = 7' 가능

n = (op * (op - 1) / 2 * 20 + 10)

print(f'Exile 소모량 : ', n)

'''



print('문제 2 : 옵션 가지 수와 모리오르가 가질 수 있는 옵션 개수를 임의로 정했을 때 그 수에 맟춰 사용되는 Exile 수')

# 모리오르 인빅투스 개당 : 10 Exile
# 모리오르 인빅투스 3개 제련 시 새로운 모리오르 1개 생성
# 모리오르 인빅투스 능력치 종류 : op 가지
# 모리오르 인빅투스가 가지는 옵션 가지 수 : n 가지
# 모리오르 인빅투스가 가지는 옵션은 중복 없음 : 경우의 수 / 모리오르가 지니는 옵션 가지 수
# 만약 모리오르 인빅투스가 총 10 가지의 옵션 중 3 개를 붙일 수 있다고 가정했을 때, 10 * 9 * 8 / 3 * 2 이게 경우의 수가 된다.((10! /7!) / 3!)
# 총 op 가지의 옵션 중 n 가지의 옵션이 붙는거니까


op, n = map(int, input("옵션 가지 수, 모리오르 옵션 가지 수").split())

#  팩토리얼 계산식 - 1

def factorial(x):             # factorial(아무 수) 라는 함수를 창조했다.
    count = 1                 # factorial 함수 내에 'count' 라는 변수를 창조했다. count = 1 이다.
    for i in range(1, x + 1): # range(<시작값>, <종료 값>, <증분(특정 값 만큼 값을 늘리는 행위 기본적으론 '1'이 적용됨)>). i == '1 ~ 아무 수 + 1' 까지 반복 할 것이다.
        count = count * i     # count(1) = count * i 랑 같다.
    return count              # factorial(x) 는 for 반복문에서 계산된 count 값을 리턴한다. (x 가 4 라면 count == i 값 1 부터 5 까지 * 1 이 된다. 5! 5팩토리얼이 된다.)

# 팩토리얼 계산식을 활용한 새로운 함수 창조

def combination(a, b):                                     # combination(a, b) 함수를 창조했다. (a, b)는 정수가 들어갈 순서를 표시한다. ex)입력 값 :  10 7 = cobination(10, 7)
    rtn = (factorial(a) / factorial(a- b)) / factorial(b)  # rtn 변수 창조 = 위에서 만든 factorial이란 함수에 a값/b값을 넣어서 공식을 만든다.
    return rtn                                             # 여기서 a 와 b는 input 값에 들어가는 옵션 가지 수/모리오르 옵션 가지 수 가 된다.

e =  combination(op, n) * 20 + 10         # combination 함수 a, b 안에 input op 값/n 값 을 넣는다. 
                                          # 첫 제작 제외(30 Exile) 반복되는건 재 제작 임으로 소모 값은 20으로 곱해주고 마지막에 10 Exile을 더하여 총 Exile 수를 계산한다.
print(f'Exile 소모량 : ', e)        # 'f'(변수 'e' 값을 프린트해주는 역할)포맷을 사용하여 'Exile 소모량 : ' 문자열과, 변수 'e'의 값을 프린트 해준다.



###########################################################

 # 팩토리얼 계산 식 - 2
'''
def factorial(x):                                                 # factorial(x) 라는 함수를 만듬 (팩토리얼 공식 만들기)
    count = 1                                                     # count 설정(팩토리얼 원리 ex) 6! = 6 * 5 * 4 * 3 * 2 * 1 = 720
    for i in range(x):                                            # 반복문에 ★range★ x 라는 집합 생성 >>> for i in range(x) = x 라는 집합 생성 앞으로 많이 사용할 예정
        print(f'i = {i + 1}\ncount = {count}')                    # 'f' 포메팅을 이용해 변수의 값을 프린트 / i 라는 변수에 (+ 1)을 반복 하게끔 설정 / count 값 프린트
        count = count * (i + 1)                                   # count 가 위에서 프린트 된 i의 값과 곱해지게 설정
        print(f'계산값 : {count}\n')                               # 'f' 포메팅을 사용하여 위에서 계산된 count의 값을 프린트 '\n'은 보기 편하게 하기위해 줄바꿈 사용
factorial(몇 팩토리얼)                                                      # x 에 정수 7을 입력 
                                                                  # range를 통하여 1 ~ 7 까지의 집합 생성/i에 1 ~ 7 까지 대입됨/계산식을 통하여 count로 계산 됨
'''    



''' 팩토리얼 계산 식 - 3
def factorial(x):
    count = 1
    for i in range(1, x + 1):
        print(f'i = {i}\ncount = {count}')
        count = count * i
        print(f'계산값 : {count}\n')
factorial(몇 팩토리얼)
'''

###########################################################

'''
 경우의 수 : a = 7 b = 2
     7 * 6 / 2 
     
     (7! / 5!) / 2! 팩토리얼(!)
         
     (a! / (a-b)!) / b! 
'''

###########################################################