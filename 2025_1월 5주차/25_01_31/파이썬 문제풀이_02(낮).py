# 파이썬 문제풀이 08
# 이름과 나이를 키보드로 입력받은 값을 각각 변수 name과 age에 저장하고 다음과 같이 출력하는 코드를 작성하세요.
'''
이름이 무엇인가요? 메이킷
몇 살인가요? 17
메이킷 님은 내년에는 18 살이 됩니다.
'''

# 정답
"""
print("이름이 무엇인가요?")
a = str(input()) # 변수 창조하여 문자열 값을 받는 구간
print("몇 살인가요?")
b = int(input()) # 변수 창조하여 정수형 값을 받는 구간간
print(f"{a} 님은 내년에는 {b + 1} 살이 됩니다.") # f 포매팅 사용하여 문자열 프린트 내 함수 구현
"""
'''
name = input('이름이 무엇인가요? ') # 변수 창조하여 문자열 값을 받는 구간
age =  int(input('몇 살인가요? ')) # 변수 창조하여 정수형 값을 받는 구간
print(name, '님은 내년에는', age + 1, '살이 됩니다.') # 변수, 문자열, 정수형 변수 + 1, 문자열 프린트 코드
'''


# 문제 009 : 정수와 실수를 각각 변수 a, b에 입력받아 두 숫자의 합과 평균을 구하는 코드를 작성하세요.
'''
# 입력
3
2.5

# 출력
a 와 b의 합은 5.5
a 와 b의 평균값은 2.75
'''

# 정답

"""
a = int(input('정수를 입력하세요. ')) # 정수형 값을 받는 변수 창조
b = float(input('소수를 입력하세요. ')) # 소수형 값을 받는 변수 창조

print(f"{a} 와 {b}의 합은 {a + b}") # f 포매팅을 이용하여 변수들의 계산과 문자열 프린트
print(f"{a} 와 {b}의 평균값은 {(a + b) / 2}") # 위와 마찬가지고 f 포매팅 사용
"""
'''
a = int(input('정수를 입력하세요. ')) # 정수형 값을 받는 변수 창조
b = float(input('소수를 입력하세요. ')) # 소수형 값을 받는 변수 창조
c = a + b # 변수 a와 b를 더하는 변수 창조 (합)
d = c / 2 # a와 b를 더한 변수 c 를 2로 나누는 변수 창조 (평균)

print(a, '와 ', b, '의 합은 ', c ) # 변수, 문자열, 변수, 문자열, 변수 프린트
print(a, '와 ', b, '의 평균값은 ', d) # 변수, 문자열, 변수, 문자열,  변수 프린트
'''
'''
a = int(input('정수를 입력하세요. ')) # 정수형 값을 받는 변수 창조
b = float(input('소수를 입력하세요. ')) # 소수형 값을 받는 변수 창조

print(a, '와 ', b, '의 합은 ', a + b) # 변수, 문자열, 변수, 문자열, 변수 + 변수 값 프린트
print(a, '와', b, '의 평균값은 ', (a + b) / 2) # 변수, 문자열, 변수, 문자열, (변수 + 변수) / 2 값 프린트
'''








# 문제 009-1 : 마라톤 풀 코스는 42.195 km. 해당 예제를 출력하세요.
# 예제
"""
거리를 얼마나 달려왔나요? km로 입력하세요: 12.5 
당신이 마라톤 완주를 하려면 앞으로 29.695 km 더 달려야 합니다. 
"""

# 정답
'''
full = 42.195 # 마라톤 풀 코스 거리 변수 창조
a = float(input('거리를 얼마나 달려왔나요? km로 입력하세요 : ')) # 지금 뛴 거리 변수 창조
print('당신이 마라톤 완주를 하려면 앞으로', full - a, ' km 더 달려야 합니다.') # 마라톤 풀 코스 - 지금 뛴 거리 값 프린트
'''








# 문제 010 : makit 문자열 변수를 활ㅇ ㅛㅇ해 아래와 같은 실행 결과가 나오도록 코드의 빈칸을 완성하세요.
'''
# 실행 결과
S
W
!
# 빈칸
makit = "Sieun Woojin!"
result = ____________

print(result)
result = ____________

print(result)
result = ____________

print(result)
'''

# 정답
"""
makit = "Sieun Woojin!"
result = makit[0] # makit 변수의 인덱싱 [0]값

print(result)
result = makit[6] # makit 변수의 인덱싱[6]값

print(result)
result = makit[-1] # makit 변수의 인덱싱[-1]값

print(result)
"""






# 문제 011 : makit 문자열 변수를 활용해 아래와 같은 실행결과가 나오도록 코드의 빈칸을 완성하세요.
"""
# 실행 결과
eun Woo
Sieun
Woojin!
# 빈칸
makit = "Sieun Woojin!"
____________

print(result)
____________

print(result)
____________

print(result)
"""

# 정답
'''
makit = "Sieun Woojin!"

result = makit[2:9] # makit 문자열 변수에서 'e' ~ 'o' 까지의 값
print(result) 

result = makit[:5] # makit 문자열 변수에서 'S' ~ 'n' 까지의 값
print(result)

result = makit[6:] # makit 문자열 변수에서 'W' ~ '!' 까지의 값
print(result)
'''





# 문제 012 : makit 문자열 변수에서 '동'만 출력하는 코드를 작성하세요.
# 실행 결과 : 동동동
# 예제 : makit = '동서남북동서남북동서남북'

# 정답

'''
makit = '동서남북동서남북동서남북'
print(makit[::4]) # 인덱스[0]값 부터 4칸 간격으로 프린트 한다는 코드. 동!!서!남!북!!동!!서!남!북!!동!!서!남!북
'''





# 문제 013 : makit 문자열을 거꾸로 출력해보세요.
# 예제 : makit = '동서남북'

# 정답
'''
makit = '동서남북'
print(makit[::-1]) # 음수는 문자열 순서를 거꾸로 출력 하겠다는 코드
'''








# 문제 014 : makit 문자열에 번호에서, '-' 를 '.'으로 변경해 다음과 같이 실행 결과가 나오도록 코드의 빈칸을 완성하세요
# 실행 결과 : 010.1234.5678
# 빈칸
'''
phone = '010-1234-5678'
new_phone = ____________
print(new_phone)
'''

# 정답
"""
phone = '010-1234-5678'
new_phone = phone.replace('-', '.')        # replace 함수를 사용하여 - 를 . 으로 변경경
print(new_phone)
"""








# 문제 014-1 : 'makit code lab' 문자열 변수에서 소문자 a 를 모드 대문자 A 로 변경하세요.

# 정답
'''
x = 'makit code lab'
print(x.replace('a', 'A'))       # replace 함수 사용하여 대처처
'''






# 문제 015 : 아래와 같은 코드를 수행한 결과 값을 적어보세요

'''
a = 10
b = 20
             # 정답
print(a < b) # True
print(a > b) # False
print(7 > 8) # False
print(7 < 8) # True
print(1 <= 1) # True
print(1 >= 2) # false
print(1 == 1) # True
print(1 == 2) # False
print(1 != 1) # False
print(1 != 2) # True
'''

# 문제 015-1 : 팬린드롬은 거꾸로 읽어도 앞에서 읽은 것과 같은 문장을 말합니다. 팬린드롬인지 판별하는 코드입니다. 코드의 빈칸을 채우세요.
# 예제
'''
a = 'abbcbba'
b = _________
print('a는 팬린드롬입니다.', a == b)

c = 'abcda'
d = _________
print('c는 팬린드롬이 아닙니다.' ______ )

'''

# 정답
"""
a = 'abbcbba'
b = a[::-1]
print('a는 팬린드롬입니다.', a == b)

c = 'abcda'
d = c[::-1]
print('c는 팬린드롬이 아닙니다.', c != d )
"""

# 문제 017 : 초를 입력하면 '몇 분 몇 초'로 환산해주는 코드를 다음과 같이 출력하도록 작성하시오.
# 예제
'''
초를 입력하세요 : 1234
1234 초(sec)는 20 분(min) 34 초(sec)입니다.
'''

# 정답
"""
sec = int(input('초를 입력하세요 : '))
print(sec, ' 초(sec)는 ', sec // 60, '분(mic) ', sec % 60, ' 초(sec)입니다.' )
"""

'''
sec = int(input('초를 입력하세요 : '))
min = sec // 60
sec2 = sec % 60
print(sec, '초(sec)는 ', min, '분(min)' , sec2, '초(sec)입니다.')
'''



# 문제 018 : 다음과 같이 시간을 분 단위로 입력하면 며칠, 몇 시간, 몇 분으로 환산해서 출력하는 코드를 작성하세요.
# 예제
'''
분을 입력하세요 : 7512
7512 분은 5 일 5 시간 12 분 입니다.
'''

# 정답
# 하루를 분으로 환산한 값 활용
'''
m = int(input('분을 입력하세요 : '))
one_day_m = 24 * 60
d = m // one_day_m
h = (m % one_day_m) // 60
m2 = (m % one_day_m) % 60
print(m, ' 분은', d, ' 일', h, ' 시간', m2, ' 분 입니다.')
'''

'''
n = int(input('분을 입력하세요:'))
m = n
a = m // (24 * 60)
m = m % (24 * 60)
b = m // 60
m = m % 60
c = m
print(n, '분은', a, '일', b, '시간', c, '분입니다.')
'''







# 문제 019 : 다음과 같이 코드 실행 결과가 나오도록 코드를 완성하세요
# 실행 결과
'''
['메이킷', '우진', '시은']
메이킷
우진
시은
'''

# 정답
'''
a = ['메이킷', '우진', '시은']
print(a)
print(a[0])
print(a[1])
print(a[2])
'''


# 문제 019-1
#실행 결과
'''
킷
메이킷
메이킷
'''
# 예제
'''
a = '메이킷'
b = ['메이킷']
print(a__)
print(b__)
print(b__)
'''

# 정답
'''
a = '메이킷'
b = ['메이킷']
print(a[2])
print(b[0])
print(b[0][:]) # or b[-1]
'''





# 문제 020 : 다음과 같은 실행결과가 나오도록 코드롤 만드세요.
# 실행 결과
'''
['메이킷', '우진']
['우진', '제임스', '시은']
['제임스', '시은']
['메이킷', '우진', '제임스', '시은']
'''

# 정답
'''
a = ['메이킷', '우진', '제임스', '시은']
print(a[:2])
print(a[1:]) 
print(a[2:])
print(a)
'''


# 문제 020-1 : 다음과 같이 코드 실행 결과가 나오도록 빈칸을 완성하세요.
# 실행 결과
"""
['시은', '제임스', '우진', '메이킷']
['시은', '제임스', '우진', '메이킷']
"""
# 빈칸
'''
a = ['메이킷', '우진', '제임스', '시은']
print(a[___])
print(a[___])
'''


# 정답
'''
a = ['메이킷', '우진', '제임스', '시은']
print(a[::-1])
print(a[-1:-5:-1])
a.reverse()
print(a)
'''